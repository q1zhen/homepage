---
import { getCollection } from "astro:content"
import Base from "../layouts/Base.astro"
import { Content as IndexMD } from "../contents/index.md"
import Card from "../components/Card.astro"
import { marked } from "marked"
import publicKey from "../contents/public_key.asc?raw"

const entries = await getCollection("index")
const reservedKeys = ["description", "begin", "end", "time", "url", "abstract"]
---

<Base>

<IndexMD />

<details class="text-sm my-8 w-full">
	<summary>
		<b>PUBLIC KEY</b>
		(<code>3992 5D88 A147 656C 8EAA 5261 B782 D7F5 7541 8B17</code>)
	</summary>
	<pre class="overflow-x-auto py-2">{ publicKey }</pre>
</details>

<section class="mb-8">
	<h2>Projects</h2>
	<p><i>To be added.</i></p>
</section>

<div class="mb-8" />
{entries?.map(category => (
	<section class="not-last:mb-6">
		<h2>{category.id}</h2>
		{category.data ? Object.entries(category.data).map(([name, info]: [string, any]) => (
			<Card>
				<div class="font-sans font-bold text-stone-300">{
					info?.time ? info?.time :
						(!info?.begin
							? "For a long time"
							: `${info?.begin} â€“ ${info?.end ? info?.end : "Present"}`)
				}</div>
				<h3 class="mb-0">{name}</h3>
				{info?.url
					? <div class="text-sm mb-1"><a href={info?.url} target="_blank">{info?.url}</a></div>
					: null
				}
				{info?.description
					? <div set:html={marked.parseInline(info?.description)} />
					: null
				}
				{info
					? Object.entries(info).filter(i => !reservedKeys.includes(i[0]))
						.map(([k, v]: [string, any]) => (
							<div class="indent-[2em_hanging]">
								{k.endsWith("URL") && v
									? <span>
										<b>{k.replace("URL", "").trimEnd()}:</b>
										<a href={v} target="_blank">{v}</a>
									</span>
									: <b>{k}:</b> <span set:html={marked.parseInline(v)} />
								}
							</div>
						))
					: null
				}
				{info?.abstract
					? <details><summary class="cursor-pointer"><b>Abstract</b></summary><div class="pl-[2em] text-sm" set:html={marked.parseInline(info?.abstract)} /></details>
					: null
				}
			</Card>
		)) : <i>No information available.</i>
		}
	</section>
))}

</Base>

